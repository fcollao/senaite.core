<?xml version="1.0"?>
<dc-workflow xmlns:i18n="http://xml.zope.org/namespaces/i18n"
             workflow_id="senaite_setup_folder_workflow"
             title="Senaite setup folder Workflow"
             description=""
             state_variable="review_state"
             initial_state="active"
             manager_bypass="False"
             i18n:domain="senaite.core">

  <!--
  This is a special one-state workflow for senaite/setup folders. It allows
  authenticated users to Access and List contents from inside them, but keeps
  the view and modification permissions to LabManager and Managers only.
  This is necessary to allow client contacts or other roles to access to the
  information from Analysis Services, Sample Types, etc.
  Deletion of objects is not allowed, regardless of the role.

  IMPORTANT
  Some setup folders may require changes to this workflow. E.g.:

    - Maybe you want anonymous users to be able to see Lab Products folder

  Instead of hacking here (changing permissions wide or explicitly define
  them in setuphandlers, etc.), please create a new workflow using this one as
  a template and bind the type that does not fit 100% well to the new workflow
  instead!

  Follow this advice if you want the constellations to be happy. Thanks.
  -->

  <permission>Access contents information</permission>
  <permission>Delete objects</permission>
  <permission>List folder contents</permission>
  <permission>Modify portal content</permission>
  <permission>View</permission>

  <!-- State: active -->
  <state state_id="active" title="Active" i18n:attributes="title">
    <exit-transition transition_id="" />
    <permission-map name="Access contents information" acquired="True" />
    <permission-map name="Delete objects" acquired="False" />
    <permission-map name="List folder contents" acquired="True" />
    <permission-map name="Modify portal content" acquired="True" />
    <permission-map name="View" acquired="True" />
  </state>

  <variable variable_id="action" for_catalog="False" for_status="True" update_always="True">
    <description>Previous transition</description>
    <default>
      <expression>transition/getId|nothing</expression>
    </default>
    <guard>
    </guard>
  </variable>

  <variable variable_id="actor" for_catalog="False" for_status="True" update_always="True">
    <description>The ID of the user who performed the last transition</description>
    <default>
      <expression>user/getId</expression>
    </default>
    <guard>
    </guard>
  </variable>

  <variable variable_id="comments" for_catalog="False" for_status="True" update_always="True">
    <description>Comment about the last transition</description>
    <default>
      <expression>python:state_change.kwargs.get('comment', '')</expression>
    </default>
    <guard>
    </guard>
  </variable>

  <variable variable_id="review_history" for_catalog="False" for_status="False" update_always="False">
    <description>Provides access to workflow history</description>
    <default>
      <expression>state_change/getHistory</expression>
    </default>
    <guard>
      <guard-permission>Request review</guard-permission>
      <guard-permission>Review portal content</guard-permission>
    </guard>
  </variable>

  <variable variable_id="time" for_catalog="False" for_status="True" update_always="True">
    <description>When the previous transition was performed</description>
    <default>
      <expression>state_change/getDateTime</expression>
    </default>
    <guard>
    </guard>
  </variable>

</dc-workflow>
